4 февраля

4 парадигмы С++:
	1. ООП
	2. Структурное программирование
	3. Функциональное программирование
	4. Метапрограммирование
	
Система контроля версий позволяет сохранять программу в процессе разработки и при необходимости позволяет вернуться к предыдущему стабильно работающему состоянию. Это некая "подстраховка"
 
Основные взаимодействия с git:
	1. git clone - связать оригинальынй репозиторий с моим компьютером и создать его локальную копию (соединене происходит через ssh)
	2. git pull - обновить локальный репозиторий до оригинального репозитория
	3. git add - отметить измененные файлы в локальном репозитории, который позже войдут в коммит
	4. git commit -m - создание коммита, т.е. некоторой контрольной и сохраненной точки проекта. (-m позволяет дать краткий комментарий)
	5. git push - отправляет все локальные коммиты в оригинальный репозиторий.
	

<chrono> - библиотека для работы со временем
timestamp - количество секунд с начала эпохи UNIX - int
duration - разность ts- временной интервал
Часы:
    system_clock
    steady_clock - гарантированное возрастание
    high_resolution_clock - самые точные часы


КОНТЕЙНЕРЫ:
    I. Гомогенные, т.е. хранят один и тот же тип
        1. На основе массива:
            a. vector
            b. array
            c. deque
            d. string

        2. Узловые:
            a. list
            b. forward_list

        3. На основе деревьев (красно-черное):
            a. set, multiset
            b. map, multimap

        4. На основе хэш-таблиц:
            a. unordered_set(multiset)
            b. unordered_map(multimap)

        5. Адаптеры (обёртки):
            a. stack LIFO
            b. queue FIFO
            c. priority_queue

    II. Гетерогенные:
        1. pair
        2. tuple

Variadic templates :
    template <typename .. Types>
    ..Types
